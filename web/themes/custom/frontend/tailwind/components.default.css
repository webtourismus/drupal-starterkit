@tailwind components;

/**
  * Component rules should have a specifity of 0-1-0,
  * so utility classes can overrule them.
  */
@layer components {
  /**
   * ###################################################################################################################
   * ###################################################################################################################
   * AlpineJS
   * ###################################################################################################################
   * ###################################################################################################################
   */
   [x-cloak] {
    display: none !important;
  }

  /**
   * ###################################################################################################################
   * ###################################################################################################################
   * Animations
   * ###################################################################################################################
   * ###################################################################################################################
   */
   @media (prefers-reduced-motion: no-preference) {
    :where(html:not(.no-js)) [data-aos^='fade'],
    :where(html:not(.no-js)) [data-aos^='zoom'],
    :where(html:not(.no-js) [data-aos='children-sideward']) > :first-child,
    :where(html:not(.no-js) [data-aos='children-sideward']) > :last-child {
      opacity: 0;
      transition-property: opacity, transform;
      pointer-events: none;
    }
    :where([data-aos^='fade']).aos-animate,
    :where([data-aos^='zoom']).aos-animate,
    :where([data-aos='children-sideward'].aos-animate) > :first-child,
    :where([data-aos='children-sideward'].aos-animate) > :last-child {
      opacity: 1;
      transform: none;
      pointer-events: auto;
    }
    [data-aos='fade-up'] {
      transform: translate3d(0, 100px, 0);
    }
    [data-aos='fade-down'] {
      transform: translate3d(0, -100px, 0);
    }
    [data-aos='fade-left'] {
      transform: translate3d(100px, 0, 0);
    }
    [data-aos='fade-right'] {
      transform: translate3d(-100px, 0, 0);
    }
    :where([data-aos='children-sideward']) > :first-child {
      transform: translate3d(-100px, 0, 0);
    }
    :where([data-aos='children-sideward']) > :last-child {
      transform: translate3d(100px, 0, 0);
    }
    [data-aos='zoom-in'] {
      transform: scale(.8);
    }
  }
  @media (prefers-reduced-motion) {
    [data-aos^='fade'],
    [data-aos^='zoom'],
    :where([data-aos='children-sideward']) > :first-child,
    :where([data-aos='children-sideward']) > :last-child {
      opacity: 1;
      transform: none;
      pointer-events: auto;
    }
  }

  /**
   * ###################################################################################################################
   * ###################################################################################################################
   * All regions inside a layout starting with name "grid" are assumed to be single component regions with
   * a fixed height and top & bottom aligned borders
   * ###################################################################################################################
   * ###################################################################################################################
   */
  :where([class*=component--grid]) {
    &.paragraph--type--image img,
    &.paragraph--type--icon img,
    &.paragraph--type--icon svg,
    &.paragraph--type--linkblock .teaserable-image-container img {
      width: 100%;
      height: var(--grid-img-height);
      object-fit: cover;
    }
  }

  /**
   * ###################################################################################################################
   * ###################################################################################################################
   * SVGs inline in running text
   * ###################################################################################################################
   * ###################################################################################################################
   */
  .inline-svg {
    @apply inline-block h-[1em] align-[-1.25em];
  }
  .inline-svg-fw {
    @apply inline-svg w-[1.5em];
  }

  /**
   * In admin preview only show the default full view mode
   */
  .node-preview-form-select {
    @media (min-width: 641px) {
      &::after {
        color: yellow;
        content: 'Only preview, not yet saved';

        html[lang=de] & {
          content: 'Nur Vorschau, noch nicht gespeichert';
        }
      }
    }
    .form-item-view-mode {
      display: none;
    }
  }
}
