{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 */
#}
{% set itemlist_attributes = create_attribute({'class': 'field__items'}) %}
{% if label_display == 'visuallay_hidden' %}
  {% set title_attributes = title_attributes.addClass('sr-only') %}
{% endif %}


{% block container %}
  <div {{ attributes }}>
    {% block label_and_items %}
      {% if not(label_hidden ?? TRUE) %}
        <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
        {% if multiple %}
          <div {{ itemlist_attributes }}>
        {% endif %}
      {% endif %}
      {% block items %}
        {% for item in items %}
          {# try to avoid unnecessary wrappers and only render them when actually used #}
          {% if item.attributes is not empty %}
            <div {{item.attributes}}>
          {% endif %}
          {% block item %}
            {{ item.content }}
          {% endblock %}
          {% if item.attributes is not empty %}
            </div>
          {% endif %}
        {% endfor %}
      {% endblock %}
      {% if not(label_hidden ?? TRUE) %}
        {% if multiple %}
          </div>
        {% endif %}
      {% endif %}
    {% endblock label_and_items %}
  </div>
{% endblock container %}
