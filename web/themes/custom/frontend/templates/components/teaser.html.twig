{##
 #
 # Shared teaserable base template for teaserable entities like icon or
 # linkblock paragraphs and any node type in a teaser-like display mode.
 #
 # Available functions:
 # ====================
 # - entity.getTeaserTitleField(): ?FieldItemList
 # - entity.getTeaserSubtitleField(): ?FieldItemList
 # - entity.getTeaserImagesField(): ?FieldItemList
 # - entity.getTeaserTextField(): ?FieldItemList
 # - entity.getTeaserUrl(): ?Url
 #
 # Available only in referencing teaser entities:
 # ==============================================
 # - entity.getReferencedEntity(): ?ContentEntity
 # - entity.getReferencingField(): ?FieldItemList
 #
 # Available render arrays:
 # ========================
 # - entity.getRenderedTeaserTitle() or content[entity.getRenderedTeaserTitle.getName]
 # - entity.getRenderedTeaserSubtitle() or content[entity.getRenderedTeaserSubtitle.getName]
 # - entity.getRenderedTeaserImages() or content[entity.getRenderedTeaserImages.getName]
 # - entity.getRenderedTeaserText() or content[entity.getRenderedTeaserText.getName]
 #
 # Note that the keys in the "content" render array are the names of the referenced field
 # storages and might be different than the semantic field name. (E.g. a paragraph might have
 # a "content.field_text" which falls back to a referenced node's "content.body").
 #
 # All render arrays provide these helper variables:
 # =================================================
 # - content.FIELD['#teaser_fieldname'] ... the semantic field name
 #
 # This semantic field name is normalized, no matter if the field is from a
 # referenced entity, or from its own entity.
 #
 #
 #
 # @see \Drupal\landle\Entity\TeaserableInterface for more information.
 #
 ##}

{% set bundle = entity.getReferencedEntity.bundle ?? entity.bundle() %}
{% set multiple_images = (content[entity.getTeaserImagesField.getName]|children|length >= 2) and
                         (content[entity.getTeaserImagesField.getName]['#third_party_settings']['field_formatter_range']['limit'] ?? 9999 >= 2)
%}
{% set splidejs_config = {
    'arrows': (true and multiple_images),
    'pagination': (false and multiple_images),
    'drag': (true and multiple_images),
} %}
{% set images_attributes = create_attribute({
  'class': ['teaserable-images', 'splide'],
  'data-splide': splidejs_config|json_encode(constant('JSON_UNESCAPED_SLASHES'))
}) %}

{% set texts_attributes = create_attribute({'class': ['teaserable-texts']}) %}
{% set title_attributes = create_attribute({'class': ['teaserable-title']}) %}
{% set product_attributes = create_attribute({'class': ['teaserable-product']}) %}

{% set text_wrapper_attributes = create_attribute({'class': ['teaserable-text-wrapper']}) %}
{% set link_wrapper_attributes = create_attribute({'class': ['teaserable-link-wrapper']}) %}

{% if entity.getActionUrl('readmore') %}
  {% set attributes = attributes.addClass(['teaserable-is-linked']) %}
  {% set images_attributes = images_attributes.addClass('cursor-pointer').setAttribute('data-js-behavior-linkify', 'readmore') %}
  {% set title_link_attributes = create_attribute({
    'href': entity.getActionUrl('readmore').toString,
    'target': entity.getReferencingField.0.options.attributes.target,
    'data-action-link-type': 'readmore',
  }) %}
{% else %}
  {% set attributes = attributes.addClass('teaserable-no-link') %}
{% endif %}



{% block teaserable %}
<div {{ attributes }}>
  {% block images %}
  <div {{ images_attributes }}>
    {{ {'#theme': 'splidejs_arrows'}|add_suggestion(bundle) }}

    <div class="splide__track">
      <div class="splide__list">
        {{ content[entity.getTeaserImagesField.getName]|add_suggestion('teaserable-images-slider') }}
      </div>
    </div>
  </div>
  {% endblock %}

  {% block texts %}
    <div {{ texts_attributes }}>
      {% block text_wrapper %}
      <div {{ text_wrapper_attributes }}>
        {% block text_title %}
          <h3 {{ title_attributes }}>
            {% if entity.getActionUrl('readmore') %}
              <a {{ title_link_attributes }}>
            {% endif %}
            {{ content[entity.getTeaserTitleField.getName] }}
            {% if entity.getActionUrl('readmore') %}
              </a>
            {% endif %}
          </h3>
        {% endblock %}
        {% block text_product %}
          {% if entity.getProductFieldNames %}
            <div {{ product_attributes }}>
              {% for product_field in entity.getProductFieldNames %}
                {{ content[product_field] }}
              {% endfor %}
            </div>
          {% endif %}
        {% endblock %}
        {% block text_running %}
          {{ content|without(entity.getTeaserImagesField.getName, entity.getTeaserTitleField.getName)|without(entity.getActionFieldnames)|without(entity.getProductFieldNames) }}
        {% endblock %}
      </div>
      {% endblock %}

      {% block link_wrapper %}
      <div {{ link_wrapper_attributes }}>
        {% for action_id, action_fieldname in entity.getActionFieldnames %}
          {{ entity.getRenderedAction(action_id, view_mode) }}
        {% endfor %}
      </div>
      {% endblock %}
    </div>
  {% endblock %}
</div>
{% endblock %}
