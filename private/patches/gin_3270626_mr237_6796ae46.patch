From c73715f7d65589aab70433f0d31cc643cb53c814 Mon Sep 17 00:00:00 2001
From: Dieter Holvoet <dieter.holvoet@gmail.com>
Date: Mon, 20 Mar 2023 14:30:45 +0100
Subject: [PATCH] Integrate taxonomy forms with the Gin sidebar

---
 src/GinContentFormHelper.php | 48 ++++++++++++++++++++++++++++++++++++
 1 file changed, 48 insertions(+)

diff --git a/src/GinContentFormHelper.php b/src/GinContentFormHelper.php
index 4c7de93e..34f3bb13 100644
--- a/src/GinContentFormHelper.php
+++ b/src/GinContentFormHelper.php
@@ -3,12 +3,14 @@
 namespace Drupal\gin;
 
 use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
+use Drupal\Core\Entity\ContentEntityFormInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\StringTranslation\StringTranslationTrait;
 use Drupal\Core\Theme\ThemeManagerInterface;
+use Drupal\taxonomy\TermInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
 /**
@@ -95,6 +97,8 @@ class GinContentFormHelper implements ContainerInjectionInterface {
       return;
     }
 
+    $base_form_id = $form_state->getBuildInfo()['base_form_id'] ?? NULL;
+
     // Provide a default meta form element if not already provided.
     // @see NodeForm::form()
     $form['advanced']['#attributes']['class'][] = 'entity-meta';
@@ -201,6 +205,47 @@ class GinContentFormHelper implements ContainerInjectionInterface {
       ];
     }
 
+    // Taxonomy term forms.
+    if ($base_form_id === 'taxonomy_term_form') {
+      $form_object = $form_state->getFormObject();
+      assert($form_object instanceof ContentEntityFormInterface);
+
+      $term = $form_object->getEntity();
+      assert($term instanceof TermInterface);
+
+      if ($form['langcode']) {
+        $form['langcode']['widget'][0]['#type'] = 'details';
+        $form['langcode']['widget'][0]['#group'] = 'advanced';
+      }
+
+      // Move pathauto into sidebar. We have to copy this code from the PathWidget
+      // because, at the time the PathWidget is processed the advanced group is
+      // still not present. The group will be created later in a form alter.
+      $form['path_settings'] = [
+        '#type' => 'details',
+        '#title' => t('URL path settings'),
+        '#open' => !empty($form['path']['widget'][0]['alias']['#value']),
+        '#group' => 'advanced',
+        '#access' => !empty($form['path']['#access']) && $term->hasField('path') && $term->get('path')->access('edit'),
+        '#attributes' => [
+          'class' => ['path-form'],
+        ],
+        '#attached' => [
+          'library' => ['path/drupal.path'],
+        ],
+        '#weight' => 30,
+      ];
+      $form['path']['#group'] = 'path_settings';
+
+      if ($form['content_translation']) {
+        $form['content_translation']['#group'] = 'advanced';
+      }
+
+      if ($form['relations']) {
+        $form['relations']['#group'] = 'advanced';
+      }
+    }
+
     // Specify necessary node form theme and library.
     // @see claro_form_node_form_alter
     $form['#theme'] = ['node_edit_form'];
@@ -246,6 +291,9 @@ class GinContentFormHelper implements ContainerInjectionInterface {
       'node.add',
       'entity.node.content_translation_add',
       'entity.node.content_translation_edit',
+      'entity.taxonomy_term.edit_form',
+      'entity.taxonomy_term.add_form',
+      'entity.taxonomy_term.content_translation_add',
       'quick_node_clone.node.quick_clone',
       'entity.node.edit_form',
     ];
-- 
GitLab

